name: Build and Release

on:
  workflow_dispatch:
  push:
    branches:
      - 'master'
      - 'releases/**'
    tags:
      - v*.*
  pull_request:
    branches:
      - master

permissions:
  contents: write

env:
  LSL_RELEASE_URL: 'https://github.com/sccn/liblsl/releases/download'
  LSL_RELEASE: '1.16.2'

defaults:
  run:
    shell: bash

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {name: "windows-x64", os: "windows-latest", arch: "amd64",
             qt_arch: "win64_msvc2019_64", qt_ver: "6.4.3",
             cmake_extra: "-DCMAKE_PREFIX_PATH='D:\\a\\App-Wiimote\\Qt\\6.4.3\\msvc2019_64' -T v142,host=x86"}
          - { name: "macOS-latest", os: "macOS-latest"}
          - { name: "jammy", os: "ubuntu-22.04"}
          - { name: "focal", os: "ubuntu-20.04"}

    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Install liblsl (Ubuntu)
        if: startsWith(matrix.config.os, 'ubuntu-')
        run: |
          sudo apt install -y libpugixml-dev
          curl -L ${LSL_RELEASE_URL}/v${LSL_RELEASE}/liblsl-${LSL_RELEASE}-$(lsb_release -sc)_amd64.deb -o liblsl.deb
          sudo apt install ./liblsl.deb

      - name: Install liblsl (Windows)
        if: matrix.config.os == 'windows-latest'
        run: |
          curl -L ${LSL_RELEASE_URL}/v${LSL_RELEASE}/liblsl-${LSL_RELEASE}-Win_${{ matrix.config.arch}}.zip -o liblsl.zip
          7z x liblsl.zip -oLSL

      - name: Install liblsl (macOS)
        if: startsWith(matrix.config.os, 'macos-')
        run: brew install labstreaminglayer/tap/lsl

      - name: Install Qt (Ubuntu)
        if: startsWith(matrix.config.os, 'ubuntu-')
        run: |
          sudo apt-get update -y
          if [[ "${{ matrix.config.name }}" = focal ]]; then
            sudo add-apt-repository -y ppa:okirby/qt6-backports
          fi
          sudo apt-get install -y cmake libglx-dev qt6-base-dev

      - name: Install Qt (Windows)
        if: matrix.config.os == 'windows-latest'
        uses: jurplel/install-qt-action@v3.2.1
        with:
          version: ${{ matrix.config.qt_ver }}
          arch: ${{ matrix.config.qt_arch }}

      - name: Install Qt (MacOS)
        if: startsWith(matrix.config.os, 'macOS-')
        run: brew install qt

      - name: Configure Target
        run: |
          cmake --version
          cmake -B build -S . \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_INSTALL_PREFIX=${PWD}/install \
          -DCPACK_PACKAGE_DIRECTORY=${PWD}/package \
          -DCPACK_DEBIAN_PACKAGE_SHLIBDEPS=ON \
          ${{ matrix.config.cmake_extra }}

      - name: Build and Package
        run: |
          cmake --build build --target install --config Release -j
          cmake --build build --target package --config Release -j

      - name: Ubuntu - Prefix package with release name
        if: startswith(matrix.config.os, 'ubuntu-')
        run: |
          pushd dist
          temp="$(lsb_release -cs)"
          for name in *
          do
            mv "$name" "$(echo $temp)-$name"
          done
          popd

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          files: |
            package/*
